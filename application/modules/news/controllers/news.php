<?php

class News extends MX_Controller
{
	private $news_articles = "";
	private $startIndex = 0;
    private $externalNewsString = "";
    private $forumPostsString = "";
	
	public function __construct()
	{
		//Call the constructor of MX_Controller
		parent::__construct();	
		
		$this->load->config('news');
		$this->load->library('pagination');
		$this->load->model('news_model');
		$this->load->model('comments_model');
	}
	
	/**
	 * Default to page 1
	 */
	public function index()
	{
		    
		if($this->config->item("news_external_source") == TRUE){
		    $this->getExternalNews();
		}
		//Load the thing we want like the facebook or normal news
        elseif($this->config->item('news_by_facebook') == TRUE){
			//Facebook enabled
			$this->loadFacebookDetails();
			$this->getFacebookNews();
		}
		else
		{
			//Facebook disabled load normal news.
			$this->getNormalNews();
		}
		
		//Show the page
		$this->displayPage();
	}
	
    private function displayPage(){
        // get the cache
		$cache = $this->cache->get("news_" . $this->startIndex);
		
		// Check if cache is valid
		if($cache !== false)
        {
            $this->template->view($cache, "modules/news/css/news.css", "modules/news/js/ajax.js");
        }
        else {
            
            $confExternalMore = $this->config->item("news_external_more");
            
            $data = array(
                "articles" => $this->news_articles, 
                'url' => $this->template->page_url, 
                "external_news_string" => $this->externalNewsString,
                "show_external_more" => empty($confExternalMore) ? false : true,
                "external_more_url" => $this->config->item("news_external_more"),
                "pagination" => $this->pagination->create_links()
            );
            
            
            $content = $this->template->loadPage("articles.tpl", $data);
            
            $this->cache->save("news_" . $this->startIndex, $content);
            
            // Load the template and pass the page content
            $this->template->view($content, "modules/news/css/news.css", "modules/news/js/ajax.js");
        }
	}
	
	private function getNormalNews()
	{
		//Init pagination
		$config = $this->initPagination();
	
		//Decide our starting index of the news
		$this->startIndex = $this->uri->segment($config['uri_segment']);
		
		if(empty($this->startIndex))
		{
			$this->startIndex = 0;
		}

		//Get the articles with the lower and upper limit decided by our pagination.
		$this->news_articles = $this->news_model->getArticles($this->startIndex, ($this->startIndex + $config['per_page']));
		
		//For each key we need to add the special values that we want to print
		foreach($this->news_articles as $key=>$article)
		{
			$this->news_articles[$key]['date'] = date("Y/m/d", $article['timestamp']);
			$this->news_articles[$key]['author'] = $this->user->getNickname($article['author_id']);
			$this->news_articles[$key]['link'] = ($article['comments'] == -1)? '' : "href='javascript:void(0)' onClick='Ajax.showComments(".$article['id'].")'";
			$this->news_articles[$key]['comments_id'] = "id='comments_".$article['id']."'";
			$this->news_articles[$key]['comments_button_id'] = "id='comments_button_".$article['id']."'";
		}
	}
    
    /**
     * Loads the first article from the CMS (article with the field page set to: news)
     * then loads a news string generated by the forum software
     */
    private function getExternalNews(){
     
        //Get the articles with the lower and upper limit decided by our pagination.
        $this->news_articles = $this->news_model->getArticles(0, 1, "news");
        
        //For each key we need to add the special values that we want to print
        foreach($this->news_articles as $key=>$article)
        {
            $this->news_articles[$key]['date'] = date("Y/m/d", $article['timestamp']);
            $this->news_articles[$key]['author'] = $this->user->getNickname($article['author_id']);
            $this->news_articles[$key]['link'] = ($article['comments'] == -1)? '' : "href='javascript:void(0)' onClick='Ajax.showComments(".$article['id'].")'";
            $this->news_articles[$key]['comments_id'] = "id='comments_".$article['id']."'";
            $this->news_articles[$key]['comments_button_id'] = "id='comments_button_".$article['id']."'";
        }
        
        /*
         * News generated by the forum software
         */
        $url = $this->config->item("news_external_source");
        
        $string = file_get_contents($url);
        
        $start = strpos($string, '<div id="news">')+strlen('<div id="news">');
        $stop = strpos($string, "</div> <!-- /news -->");
        $news_string = substr($string, $start, $stop-$start);
        $news_string = utf8_encode($news_string); 
        
        $externalDomain = $this->config->item("news_external_domain");
        
        if(!empty($externalDomain)){
            $news_string = str_replace('src="/', 'src="'.$externalDomain.'/', $news_string);      
        }
        
        $this->externalNewsString = $news_string;
        
          
        if(strpos($string, '<div id="posts">') > 0){
            $start = strpos($string, '<div id="posts">')+strlen('<div id="posts">');
            $stop = strpos($string, "</div> <!-- /posts -->");
            $this->forumPostsString = substr($string, $start, $stop-$start);
        }
        
    }

	private function getFacebookNews()
	{
		$facebook_articles = $this->news_articles;
		$this->news_articles = array();
		
		foreach($facebook_articles['data'] as $key=>$article)
		{
			//Make sure that the variables from $article exists
			isset($article['message']) ? $article['message'] = $article['message'] : $article['message'] = 'An error occurred while trying to load this message.';
			isset($article['created_time']) ? $article['created_time'] = $article['created_time'] : $article['created_time'] = 'An error occurred while trying to load this time.';
			isset($article['from']['name']) ? $article['from']['name'] = $article['from']['name'] : $article['from']['name'] = 'An error occurred while trying to load this username.';
			isset($article['id']) ? $article['id'] = $article['id'] : $article['id'] = 'An error occurred while trying to load the article id.';
			isset($article['comments']['count']) ? $article['comments']['count'] = $article['comments']['count'] : $article['comments']['count'] = 'An error occurred while trying to load the comment count.';
			
			//Load them into our array
			$this->news_articles[$key]['date'] = $article['created_time'];
			$this->news_articles[$key]['link'] = "href='javascript:void(0)' onClick='Ajax.showComments(".$article['id'].")'";
			$this->news_articles[$key]['comments_id'] = "id='comments_".$article['id']."'";
			$this->news_articles[$key]['comments_button_id'] = "id='comments_button_".$article['id']."'";
			$this->news_articles[$key]['content'] = isset($article['message']) ? $article['message'] : 'An error occurred while trying to load this message.';
			$this->news_articles[$key]['comments'] = $article['comments']['count'];
			$this->news_articles[$key]['headline'] = mb_substr($article['message'],0,$this->config->item('facebook_headline_length')).' ....';
			
			//Get the nickname of our poster that we assigned
			$this->news_articles[$key]['author'] = $this->user->getNickname($this->config->item('facebook_user_poster'));
			//Get our poster that we assigned
			$this->news_articles[$key]['author_id'] = $this->config->item('facebook_user_poster');
			//Load the avatar through facebook api and uses SSL return to make sure that we don't break https :P
			$this->news_articles[$key]['avatar'] = 'https://graph.facebook.com/'.$this->config->item('facebook_username').'/picture?type=normal&return_ssl_resources=1';
		}
	}
	
	private function loadFacebookDetails()
	{
		//Try to open the facebook url pages.
		try 
		{
			//Save it in news_articles then, also decode the json, also a array!
			$this->news_articles = file_get_contents('https://graph.facebook.com/'.$this->config->item('facebook_username').'/feed/?access_token='.$this->generateAccessToken().'&limit='.$this->config->item('news_limit'));
			$this->news_articles = json_decode($this->news_articles, true);
		} catch(Exception $e)
		{
			return $e->getMessage();
		}
		
		return $this->news_articles;
	}
	
	private function generateAccessToken()
	{
		try
		{
			//Get the access token
			$token_line = file_get_contents('https://graph.facebook.com/oauth/access_token?grant_type=client_credentials&client_id='.$this->config->item('facebook_app_id').'&client_secret='.$this->config->item('facebook_app_secret'));
			//Extract the right token out of it
			$access_token = mb_substr($token_line, 13, strlen($token_line));
			return $access_token;
		} catch(Exception $e)
		{
			return $e->getMessage();
		}
	}
	
	private function initPagination()
	{
		//Basic configs
		$config['uri_segment'] = '2';
		$config['base_url'] = base_url().'/news';
		$config['total_rows'] = $this->news_model->countArticles();
		$config['per_page'] = $this->config->item('news_limit');
		
		//Tag configs
		$config['full_tag_open'] = '<div id="news_pagination">';
		$config['full_tag_close'] = '</div>';
		
		//Disable last and first tag.
		$config['last_link'] = '';
		$config['first_link'] = '';
		
		//Change next and previous
		$config['next_link'] = 'Older posts &rarr;';
		$config['prev_link'] = '&larr; Newer posts';
		
		//DISABLE THE PAGE NUMBERS
		$config['display_pages'] = FALSE;
		
		
		$this->pagination->initialize($config);
		
		return $config;
	}
}
